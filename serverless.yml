# Welcome to serverless. Read the docs
# https://serverless.com/framework/docs/

# Serverless.yml is the configuration the CLI
# uses to deploy your code to your provider of choice

# The `service` block is the name of the service
service: dcm-activity

# The `provider` block defines where your service will be deployed
provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  environment:
    REGISTRY_TABLE: dcm_registry_${opt:stage, self:provider.stage}
    ACTIVITY_TABLE: dcm_activity_${opt:stage, self:provider.stage}
    REGISTERED_CLAN_TOPIC: arn:aws:sns:us-east-1:410919218872:registered_clan_${opt:stage, self:provider.stage}
    BUNGIE_BASE_URL: https://www.bungie.net/Platform
    BUNGIE_API_KEY: b5cf1e00bfe644f9bf294f31fe3ea71d
    CLAN_MEMBER_TOPIC: arn:aws:sns:us-east-1:410919218872:clan_member_${opt:stage, self:provider.stage}

  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
    Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.REGISTRY_TABLE}"

  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.ACTIVITY_TABLE}"

  - Effect: Allow
    Action:
      - sns:Publish
    Resource: ${self:provider.environment.REGISTERED_CLAN_TOPIC}

  - Effect: Allow
    Action:
      - sns:Publish
    Resource: ${self:provider.environment.CLAN_MEMBER_TOPIC}


# The `functions` block defines what code to deploy
functions:
  registryWorker:
    handler: handler.getRegisteredClans
    events:
      - schedule: rate(6 hours)

  garbageCollector:
    handler: handler.cleanUp
    events:
      - sns: registered_clan_${opt:stage, self:provider.stage}

  rosterWorker:
    handler: handler.getClanRoster
    events:
      - sns: registered_clan_${opt:stage, self:provider.stage}

  profileWorker:
    handler: handler.getMemberActivityProfile
    events:
      - sns: clan_member_${opt:stage, self:provider.stage}

  startActivityReport:
    handler: handler.startActivityReport
    events:
      - http:
          path: inactive-members/
          method: post

  getInactiveMembers:
    handler: handler.getInactiveMembers
    events:
      - http:
          path: inactive-members/{clanId}
          method: get
          request:
            parameters:
              paths:
                clanId: true


resources:
  Resources:
    DestinyClanManagerActivityTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: clanId
            AttributeType: S
          -
            AttributeName: membershipId
            AttributeType: S
        KeySchema:
          -
            AttributeName: clanId
            KeyType: HASH
          -
            AttributeName: membershipId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.ACTIVITY_TABLE}
